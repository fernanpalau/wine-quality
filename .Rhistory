select(Country_Name,Streams,Track,Artist)
m_st_x_c
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(pais,Country_Name = max(Streams))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
m_st_x_c
pais<-summarise(pais,Country_Name= Country_Name= case_when(max(Streams))
pais<-summarise(pais,Country_Name= Country_Name= case_when(max(Streams)))
pais<-summarise(pais,Country_Name= Country_Name {if(pais$Streams=max(pais$Streams))})
as.character(data_csv$Country_Name)
pais<-group_by(data_csv, Country_Name)
pais<-summarise(pais,Country_Name= Country_Name)
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(pais,Country_Name = max(Streams))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
pais<-summarise(pais,Country_Name= Streams)
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(pais,Country_Name = first(Streams))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(pais,Country_Name = distinct(Country_Name))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
pais
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(group_by(Country_Name) = distinct(Country_Name))%>%
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(group_by(Country_Name))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
as.factor(data_csv$Country_Name)
m_st_x_c <- data_csv %>%
filter(Country_Name != 'World') %>%
summarise(group_by(Country_Name))%>%
arrange(desc(Streams),Country_Name) %>%
select(Country_Name,Streams,Track,Artist)
data_csv%>%
distinct(max(Streams,Country_Name))
x<-data_csv%>%
distinct(max(Streams,Country_Name))
x
x<-data_csv%>%
distinct(max(Streams,Country_Name))%>%
select(Country_Name,Streams,Track,Artist)
m_s_tn_top10<- data_csv %>%
select(Country_Name,Streams) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name) %>%
head(m_s_tn_top10)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Streams)
m_s_s_top10
tail(m_s_s_top10)
#Streams by Region - Excluding country named 'World'.
m_s_r_top10 <- data_csv %>%
select(Country_Name,Streams) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
summarize(Total_Streams = sum(Streams)) %>%
arrange(desc(Total_Streams),Country_Name) %>%
mutate(millions = Total_Streams/1000000)
m_s_r_2top10 <- t(m_s_r_top10[-1])
colnames(m_s_r_2top10) <- t(m_s_r_top10[,1])
n <- joinCountryData2Map(m_s_r_top10, joinCode="NAME", nameJoinColumn="Country_Name")
mapCountryData(n, nameColumnToPlot="millions", missingCountryCol = 'white',oceanCol = 'lightblue',borderCol = 'black', mapTitle="Songs Streamed in Millions",colourPalette="diverging",addLegend=TRUE,catMethod=c(seq(from=0,to=27000,by=10)))
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Streams,max(Streams))
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Streams,max(Streams))%>%
filter(Country_Name != 'World') %>%
group_by(Streams)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Streams,max(Streams))%>%
filter(Country_Name != 'World') %>%
group_by(Streams)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name,max(Streams))%>%
filter(Country_Name != 'World') %>%
group_by(Streams)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name,first(Streams))%>%
filter(Country_Name != 'World') %>%
group_by(Streams)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams) %>%
filter(Country_Name,max(Streams))%>%
filter(Country_Name != 'World') %>%
tail(m_s_s_top10)
data_csv$Country_Name
unique(data_csv$Country_Name)
x<-data_csv%>%
if (Streams == (max(Streams)%in%c("Ecuador","France","Argentina","Finland","Norway","Italy","Lithuania","Philippines","Taiwan","New Zealand","Estonia","Turkey","United States","El Salvador","Costa Rica","Germany","Chile","Japan","Brazil","Honduras","Guatemala","Switzerland","Hungary","Canada","Peru","Belgium","Malaysia","Denmark","Bolivia","Poland","Austria","Portugal","Sweden","Mexico","Panama","Uruguay","Iceland","Spain","Czechia","Ireland","Netherlands","Slovakia","Colombia","Singapore","Indonesia","Dominican Republic","Luxembourg","United Kingdom","Paraguay","Australia","Latvia","Greece","Hong Kong SAR China"))) {select(Country_Name,Streams,Track,Artist)} else{pass}
mStreams<-max(Streams)%in%c("Ecuador","France","Argentina","Finland","Norway","Italy","Lithuania","Philippines","Taiwan","New Zealand","Estonia","Turkey","United States","El Salvador","Costa Rica","Germany","Chile","Japan","Brazil","Honduras","Guatemala","Switzerland","Hungary","Canada","Peru","Belgium","Malaysia","Denmark","Bolivia","Poland","Austria","Portugal","Sweden","Mexico","Panama","Uruguay","Iceland","Spain","Czechia","Ireland","Netherlands","Slovakia","Colombia","Singapore","Indonesia","Dominican Republic","Luxembourg","United Kingdom","Paraguay","Australia","Latvia","Greece","Hong Kong SAR China")
mStreams<-max(data_csv, Streams)%in%c("Ecuador","France","Argentina","Finland","Norway","Italy","Lithuania","Philippines","Taiwan","New Zealand","Estonia","Turkey","United States","El Salvador","Costa Rica","Germany","Chile","Japan","Brazil","Honduras","Guatemala","Switzerland","Hungary","Canada","Peru","Belgium","Malaysia","Denmark","Bolivia","Poland","Austria","Portugal","Sweden","Mexico","Panama","Uruguay","Iceland","Spain","Czechia","Ireland","Netherlands","Slovakia","Colombia","Singapore","Indonesia","Dominican Republic","Luxembourg","United Kingdom","Paraguay","Australia","Latvia","Greece","Hong Kong SAR China")
mStreams<-max(data_csv$Streams)%in%c("Ecuador","France","Argentina","Finland","Norway","Italy","Lithuania","Philippines","Taiwan","New Zealand","Estonia","Turkey","United States","El Salvador","Costa Rica","Germany","Chile","Japan","Brazil","Honduras","Guatemala","Switzerland","Hungary","Canada","Peru","Belgium","Malaysia","Denmark","Bolivia","Poland","Austria","Portugal","Sweden","Mexico","Panama","Uruguay","Iceland","Spain","Czechia","Ireland","Netherlands","Slovakia","Colombia","Singapore","Indonesia","Dominican Republic","Luxembourg","United Kingdom","Paraguay","Australia","Latvia","Greece","Hong Kong SAR China")
x<-data_csv%>%
if (mStreams) {select(Country_Name,Streams,Track,Artist)} else{pass}
mStreams
x<-data_csv%>%
filter(Country_Name,fist(Streams))
x<-data_csv%>%
as.character(Country_Name)
as.character(data_csv$Country_Name)
x<-data_csv%>%
filter(Country_Name,fist(Streams))
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Total_Streams),Country_Name)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
tail(m_s_s_top10)
head(m_s_s_top10)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(first(Country_Name))
as.factor(data_csv$Country_Name)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(first(Country_Name))
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
select(first(Country_Name))
as.character(data_csv$Country_Name)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
select(first(Country_Name))
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
select(first(Country_Name))%>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
m_s_s_top10 <- data_csv %>%
select(first(Country_Name),Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
m_s_s_top10 <- data_csv %>%
select(unique(Country_Name),Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
uCountry_Name<-unique(data_csv$Country_Name)
m_s_s_top10 <- data_csv %>%
select(uCountry_Name,Streams,Track) %>%
filter(Country_Name != 'World') %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
m_s_s_top10 <- data_csv %>%
select(Country_Name,Streams,Track) %>%
group_by(Country_Name) %>%
arrange(desc(Streams),Country_Name)
head(m_s_s_top10)
m_s_s_top10
random(m_s_s_top10)
sample(m_s_s_top10)
random(m_s_s_top10)
sample(m_s_s_top10)
sampletut<-m_s_s_top10%>%
sample_n(size = 20,replace = F)
sampletut
tail(m_s_s_top10)
mid(m_s_s_top10)
middle(m_s_s_top10)
center(m_s_s_top10)
body(m_s_s_top10)
m_s_s_top10
# Por ejemplo, para llevar a cabo estimaciones del Tamaño del efecto
# y de la Potencia cargamos las librerías de la siguiente manera:
require("compute.es")
require("pwr")
# A partir de aquí incluiremos los valores concretos de los estadísticos
# que vayamos necesitando, que obtendremos de las pantallas de salida del
# programa SPSS por ejemplo.
LosTam=c(10,10,10)
LasVarAOV<-c(23.333333,  0.962963)
#Y el fichero de datos para trabajar:
CarpAct<-"http://www4.ujaen.es/~mramos/ADMmRa/"
# En la Variable CarpAct se especifica la ruta.
# En Windows (probablemente cambie el usuario aulas):
# Carpeta descargas: CarpAct<-"C:/Users/aulas/Downloads/"
# Carpeta Documentos: CarpAct<-"C:/Users/aulas/Documents/"
# Escritotio: CarpAct<-"C:/Users/aulas/Desktop/"
FileAct<-"MaxwelDelaney04Table3_3.csv"
DataRaw<-read.table(paste0(CarpAct,FileAct),header=T,sep=";",dec=",")
Datos<-data.table(DataRaw) #Requiere la librería {data.table}
#Y el fichero de datos para trabajar:
CarpAct<-"http://www4.ujaen.es/~mramos/ADMmRa/"
# En la Variable CarpAct se especifica la ruta.
# En Windows (probablemente cambie el usuario aulas):
# Carpeta descargas: CarpAct<-"C:/Users/aulas/Downloads/"
# Carpeta Documentos: CarpAct<-"C:/Users/aulas/Documents/"
# Escritotio: CarpAct<-"C:/Users/aulas/Desktop/"
FileAct<-"MaxwelDelaney04Table3_3.csv"
DataRaw<-read.table(paste0(CarpAct,FileAct),header=T,sep=";",dec=",")
library(data.table)
Datos<-data.table(DataRaw) #Requiere la librería {data.table}
Datos
#3 Análisis convencionales del ANOVA
#3.1 Base del ANOVA: Definir el Modelo
Modelo=as.formula(DV~ Group)
M.AOV=aov(Modelo,Datos)
#3.2 Realizar el ANOVA
ResAOV<-summary(M.AOV)
ResAOV2<-anova(M.AOV)
ResLM<-summary.lm(M.AOV) # ANOVA como Modelo Lineal
# Visualizamos las Variables creadas para comprobar las diferencias
ResAOV
ResAOV2
ResLM
# Extraemos los términos más importantes del Diseño y de la Tabla ANOVA
# Nota: Es conveniente familiarizarse con los contenidos, pulsando
# sobre el nombre de cualquiera de las variables y ejecutándolo
LosNivBetw=levels(Datos[,Group])
NNivBetw=length(LosNivBetw) #Nº grupos
nBetw=Datos[, .N, by = Group] #Tamaños muestrales para cada grupo
LasMed<-Datos[,mean(DV),by=Group][[2]]
LosTam=Datos[,.N,by=Group][[2]]
LasVarAOV<-ResAOV2[, "Mean Sq", drop = FALSE][[1]]
VarErr=last(LasVarAOV)
LaF<-ResAOV2[, "F value", drop = FALSE][[1]][1]
laP<-ResAOV2[, "Pr(>F)", drop = FALSE][[1]][1]
LosGradosLib<-ResAOV2[, "Df", drop = FALSE][[1]]
NTT=Datos[,.N]
# Una vez realizado el Análisis Global (o perspectiva Omnibus),
# normalmente las revistas científicas esperan encontrar el análisis Post Hoc ...
# Y en este diseño básico tipo "Entre", la prueba más popular es la de Tukey:
posthoc <- TukeyHSD(x=M.AOV)
posthoc
# No se nos había olvidado. En realidad, el análisis descriptivo es previo,
# pero es conveniente entender el modelo antes de nada y por esto
# hemos alterado el orden de presentación.
# En R la representación de los promedios no corresponde por defecto
# a un simple diagrama de Barras, motivo por el cual tendremos que trabajar
# un poco en el programa para realizar lo que muchas revistas nos exigirán
# en este punto, aunque esté desfasado (Difícil, Seleccionar, Una, Unica & Cita; 2017) ...
# Previamente obtenemos los estadísticos descriptivos:
LosEstad <- Datos[,list(M=mean(DV),Sd=sd(DV)),by=Group]
# Para llevarlos entonces al gráfico correspondiente,
# Si la VarInd es categórica en origen:
Graph<-LosEstad[,barplot(M, names.arg= LosNivBetw,ylim=c(0,10))];
# Si, por el contraio, la VarInd es cuantitativa en origen (que no es el caso
# de nuestro diseño pero lo haremos con fines didácticos, para no cambiar de
# supuesto de prácticas):
plotmeans(Datos$DV~Datos$Group) # Requiere la librería {gplots}
# Si, por el contraio, la VarInd es cuantitativa en origen (que no es el caso
# de nuestro diseño pero lo haremos con fines didácticos, para no cambiar de
# supuesto de prácticas):
plotMeans(Datos$DV~Datos$Group) # Requiere la librería {gplots}
# Si, por el contraio, la VarInd es cuantitativa en origen (que no es el caso
# de nuestro diseño pero lo haremos con fines didácticos, para no cambiar de
# supuesto de prácticas):
library(gplots)
plotMeans(Datos$DV~Datos$Group) # Requiere la librería {gplots}
plotmeans(Datos$DV~Datos$Group) # Requiere la librería {gplots}
#Terminamos con la exploración de los estadísticos descriptivos
LosEstad
datos = read.csv("winequality-red.csv", sep = ";")
datos = read.csv("winequality-red.csv", sep = ";")
file.choose()
ruta
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
datos$Calidad = datos$quality
datos$Calidad[datos$Calidad=="3"] = "Malo"
datos$Calidad[datos$Calidad=="4"] = "Malo"
datos$Calidad[datos$Calidad=="5"] = "Regular"
datos$Calidad[datos$Calidad=="6"] = "Regular"
datos$Calidad[datos$Calidad=="7"] = "Bueno"
datos$Calidad[datos$Calidad=="8"] = "Bueno"
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
library(data.table)
#setnames(datos, "fixed.acidity", "Acidez_Fija")
setnames(datos, "volatile.acidity", "Acidez_Fija")
setnames(datos, "citric.acid", "Ácido_Cítirco")
setnames(datos, "residual.sugar", "Azucar_Residual")
setnames(datos, "chlorides       ", "Cloruros")
setnames(datos, "chlorides", "Cloruros")
setnames(datos, "free.sulfur.dioxide", "Sulfuroso")
setnames(datos, "total.sulfur.dioxide", "Sulfuroso_Total")
setnames(datos, "density", "Densidad")
setnames(datos, "sulphates", "Sulfatos")
setnames(datos, "quality", "Calidad")
class(datos)
head(datos)
head(datos)
head(datos)
datos
datos
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
class(datos)
head(datos)
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
#file.choose()
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
#file.choose()
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
head(datos)
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
setnames(datos, "volatile.acidity", "Acidez_Fija")
setnames(datos, "citric.acid", "Ácido_Cítirco")
setnames(datos, "residual.sugar", "Azucar_Residual")
setnames(datos, "chlorides", "Cloruros")
setnames(datos, "free.sulfur.dioxide", "Sulfuroso")
setnames(datos, "total.sulfur.dioxide", "Sulfuroso_Total")
setnames(datos, "density", "Densidad")
setnames(datos, "sulphates", "Sulfatos")
setnames(datos, "quality", "Calidad")
head(datos)
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
names(datos)[2]= "Acidez_Volátil"
head(datos)
names(datos)[4] ="Azúcar_Residual")
names(datos)[4] ="Azúcar_Residual"
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
head(datos)
datos$Calidad[datos$Calidad=="3"] = "Malo"
datos$Calidad[datos$Calidad=="4"] = "Malo"
datos$Calidad[datos$Calidad=="5"] = "Regular"
datos$Calidad[datos$Calidad=="6"] = "Regular"
datos$Calidad[datos$Calidad=="7"] = "Bueno"
datos$Calidad[datos$Calidad=="8"] = "Bueno"
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",12),"Cuantitativa Continua","Categórica"))
library(kableExtra)
Variables = descVinos[,1]
Tipos = descVinos[,2]
Resum_Var=cbind(data.frame(Variables),data.frame(Tipos))
Resum_Var %>%
kbl(caption = "Resumen Variables") %>%
kable_classic(full_width = F, html_font = "Cambria")
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",12),"Cuantitativa Continua","Categórica"))
library(kableExtra)
Variables = descVinos[,1]
Tipos = descVinos[,2]
Resum_Var=cbind(data.frame(Variables),data.frame(Tipos))
Resum_Var %>%
kbl(caption = "Resumen Variables") %>%
kable_classic(full_width = F, html_font = "Cambria")
sum(is.na(datos))
library(ggplot2)
ggplot(datos,aes(x=density))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
library(ggplot2)
ggplot(datos,aes(x=Densidad))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
library(ggplot2)
ggplot(datos,aes(x=Acidez_Fija))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Acidez_Volátil))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Ácido_Cítrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Ácido_Citrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Ácido_Cítrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
setnames(datos, "Ácido_Cítirco", "Ácido_Cítrico")
ggplot(datos,aes(x=Ácido_Cítrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Ácido_Cítrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=2)
ggplot(datos,aes(x=Ácido_Cítrico))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=)
head(datos)
ggplot(datos,aes(x=Azúcar_Residual))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Cloruros))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
head(datos)
ggplot(datos,aes(x=Sulfuroso))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Sulfuroso_Total))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=pH))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Sulfatos))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=alcohol))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
#file.choose()
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
#file.choose()
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
names(datos)[2]= "Acidez_Volátil"
names(datos)[3]= "Ácido_Cítirco"
names(datos)[4] ="Azúcar_Residual"
setnames(datos, "chlorides", "Cloruros")
setnames(datos, "free.sulfur.dioxide", "Sulfuroso")
setnames(datos, "total.sulfur.dioxide", "Sulfuroso_Total")
setnames(datos, "density", "Densidad")
setnames(datos, "sulphates", "Sulfatos")
setnames(datos, "quality", "Calidad")
head(datos)
datos$Calidad[datos$Calidad=="3"] = "Malo"
datos$Calidad[datos$Calidad=="4"] = "Malo"
datos$Calidad[datos$Calidad=="5"] = "Regular"
datos$Calidad[datos$Calidad=="6"] = "Regular"
datos$Calidad[datos$Calidad=="7"] = "Bueno"
datos$Calidad[datos$Calidad=="8"] = "Bueno"
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
datos$Calidad = datos$quality
datos$Calidad[datos$Calidad=="3"] = "Malo"
datos$Calidad[datos$Calidad=="4"] = "Malo"
datos$Calidad[datos$Calidad=="5"] = "Regular"
datos$Calidad[datos$Calidad=="6"] = "Regular"
datos$Calidad[datos$Calidad=="7"] = "Bueno"
datos$Calidad[datos$Calidad=="8"] = "Bueno"
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
library(kableExtra)
Variables = descVinos[,1]
Tipos = descVinos[,2]
Resum_Var=cbind(data.frame(Variables),data.frame(Tipos))
Resum_Var %>%
kbl(caption = "Resumen Variables") %>%
kable_classic(full_width = F, html_font = "Cambria")
Resum_Var %>%
kbl(caption = "Resumen Variables") %>%
kable_classic(full_width = F, html_font = "Cambria")
sum(is.na(datos))
library(ggplot2)
box_ac_vol<-ggplot(datos,aes(x=Acidez_Volátil))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
datos1<-datos[!(datos$Acidez_Volátil %in% box_ac_vol$out),]
box_ac_vol
library(ggplot2)
box_ac_vol<-ggplot(datos,aes(x=Acidez_Volátil))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
library(ggplot2)
ggplot(datos,aes(x=Acidez_Volátil))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
ggplot(datos,aes(x=Acidez_Volátil))+geom_boxplot(outlier.colour="red", outlier.shape=2,
outlier.size=1.5)
#file.choose()
ruta_csv<-"C:\\Users\\ferna\\OneDrive\\Escritorio\\MBA\\IMF\\BBDD\\Alimentación\\winequality-red.csv"
datos = read.csv(ruta_csv, sep = ";")
summary(datos)
library(data.table)
setnames(datos, "fixed.acidity", "Acidez_Fija")
names(datos)[2]= "Acidez_Volátil"
names(datos)[3]= "Ácido_Cítirco"
names(datos)[4] ="Azúcar_Residual"
setnames(datos, "chlorides", "Cloruros")
setnames(datos, "free.sulfur.dioxide", "Sulfuroso")
setnames(datos, "total.sulfur.dioxide", "Sulfuroso_Total")
setnames(datos, "density", "Densidad")
setnames(datos, "sulphates", "Sulfatos")
setnames(datos, "quality", "Calidad")
head(datos)
head(datos)
library(kableExtra)
Variables = descVinos[,1]
Tipos = descVinos[,2]
Resum_Var=cbind(data.frame(Variables),data.frame(Tipos))
datos$Calidad[datos$Calidad=="3"] = "Malo"
datos$Calidad[datos$Calidad=="4"] = "Malo"
datos$Calidad[datos$Calidad=="5"] = "Regular"
datos$Calidad[datos$Calidad=="6"] = "Regular"
datos$Calidad[datos$Calidad=="7"] = "Bueno"
datos$Calidad[datos$Calidad=="8"] = "Bueno"
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
descVinos = data.frame("Variable" = colnames(datos), "Tipo" = c(rep("Cuantitativa Discreta",11),"Cuantitativa Continua","Categórica"))
